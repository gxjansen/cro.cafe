---
import { getCollection } from 'astro:content';
import PageLayout from '~/layouts/PageLayout.astro';
import Hero from '~/components/widgets/Hero.astro';
import EpisodeCard from '~/components/episode/Card.astro';
import PopularEpisodes from '~/components/episode/PopularEpisodes.astro';
import HostsSection from '~/components/host/HostsSection.astro';
import GuestsSection from '~/components/guest/GuestsSection.astro';
import { getTranslations } from '~/utils/translations';

const translations = getTranslations('de');
const metadata = {
  title: translations.title,
  description: translations.description,
  type: 'website' as const,
  image: '/images/default.png',
  canonicalUrl: Astro.url.href,
};

import type { Language } from '~/types';

const availableLanguages: readonly Language[] = ['en', 'de', 'es', 'nl'] as const;

import { transformEpisodes } from '~/utils/episode-transformation';

// Get German episodes and transform to match schema
const rawEpisodes = await getCollection('de-episodes');
const episodes = transformEpisodes(rawEpisodes);

// German show ID from Transistor
const germanShowId = '28592';
---

<PageLayout {...{ metadata, availableLanguages, currentLang: 'de' }}>
  <Hero
    title="Willkommen bei CRO.CAFE"
    subtitle={translations.description}
  />

  {/* Host Section */}
  <section class="py-12 bg-gray-50 dark:bg-gray-900">
    <div class="container mx-auto">
      <HostsSection language="de" title="Ihre Gastgeber" />
    </div>
  </section>

  {/* Guest Section */}
  <section class="py-12">
    <div class="container mx-auto">
      <GuestsSection language="de" limit={8} showViewAllButton={true} />
    </div>
  </section>

  {/* Popular Episodes */}
  <section class="py-12" style="background-color: var(--color-accent-dark)">
    <div class="container mx-auto">
      <PopularEpisodes language="de" limit={3} title="Beliebteste Episoden" />
    </div>
  </section>

  {/* Latest Episodes */}
  <section class="py-12">
    <div class="container mx-auto">
      <h2 class="text-3xl font-bold mb-8 text-center text-gray-900 dark:text-white">{translations.latestEpisodes}</h2>
      {episodes.length > 0 ? (
        <>
          <div class="grid gap-8 sm:grid-cols-2 lg:grid-cols-3 mb-8">
            {episodes.slice(0, 6).map((episode) => (
              <EpisodeCard episode={episode} />
            ))}
          </div>
          <div class="text-center">
            <a href="/de/episodes" class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-red-600 hover:bg-red-700 transition-colors">
              Alle Episoden anzeigen
            </a>
          </div>
        </>
      ) : (
        <div class="text-center py-8">
          <p class="text-gray-600 dark:text-gray-400">Keine Episoden verf√ºgbar</p>
        </div>
      )}
    </div>
  </section>
</PageLayout>
