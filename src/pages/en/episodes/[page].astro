---
import { getCollection } from 'astro:content';
import PageLayout from '~/layouts/PageLayout.astro';
import EpisodeGrid from '~/components/episode/Grid.astro';
import Pagination from '~/components/common/Pagination.astro';
import { getTranslations } from '~/utils/translations';
import { PAGINATION } from '~/config';

export async function getStaticPaths() {
  const episodes = await getCollection('en-episodes');
  const { EPISODES_PER_PAGE } = PAGINATION;
  const totalPages = Math.ceil(episodes.length / EPISODES_PER_PAGE);
  
  return Array.from({ length: totalPages }, (_, i) => ({
    params: { page: (i + 1).toString() },
    props: { currentPage: i + 1, totalPages },
  }));
}

const { currentPage, totalPages } = Astro.props;

// Get English episodes
const episodes = await getCollection('en-episodes');

// Sort episodes by date
const sortedEpisodes = episodes
  .sort((a, b) => 
    new Date(b.data.attributes.published_at).valueOf() - 
    new Date(a.data.attributes.published_at).valueOf()
  );

// Pagination
const { EPISODES_PER_PAGE } = PAGINATION;
const paginatedEpisodes = sortedEpisodes.slice(
  (currentPage - 1) * EPISODES_PER_PAGE,
  currentPage * EPISODES_PER_PAGE
);

// Get English translations
const t = getTranslations('en');

// Metadata for the page
const metadata = {
  title: `${t.latestEpisodes} - Page ${currentPage} - ${t.title}`,
  description: t.description,
  type: 'website',
  alternateLanguages: {
    en: '/en/episodes',
    nl: '/nl/episodes',
    de: '/de/episodes',
    es: '/es/episodes',
  },
};

const availableLanguages = ['en', 'nl', 'de', 'es'] as const;
---

<PageLayout metadata={metadata} currentLang="en" availableLanguages={availableLanguages}>
  <div id="episodes" class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <h1 class="text-4xl font-bold text-center mb-8">{t.latestEpisodes}</h1>
    <EpisodeGrid episodes={paginatedEpisodes} columns="3" />
    <Pagination currentPage={currentPage} totalPages={totalPages} basePath="/en/episodes" />
  </div>
</PageLayout>
