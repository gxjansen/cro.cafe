---
export const prerender = true;
import { getCollection, type CollectionEntry } from 'astro:content';
import GuestLayout from '../../layouts/GuestLayout.astro';
import { getEpisodesByGuest } from '../../utils/guests';
import { getGuestImage } from '../../utils/images';

type GuestCollectionType = 'en-guests' | 'nl-guests' | 'de-guests' | 'es-guests';

export async function getStaticPaths() {
  const collections: GuestCollectionType[] = ['en-guests', 'nl-guests', 'de-guests', 'es-guests'];
  const allPaths = [];

  for (const collection of collections) {
    try {
      const guests = await getCollection(collection);
      const paths = await Promise.all(
        guests.map(async (guest: CollectionEntry<GuestCollectionType>) => {
          // Extract language from collection name
          const language = collection.replace('-guests', '');
          
          // Get episodes for this guest
          const episodes = await getEpisodesByGuest(language, guest.id);
          
          return {
            params: { slug: guest.id },
            props: { guest, collection, episodes },
          };
        })
      );
      allPaths.push(...paths);
    } catch (error) {
      console.warn(`No guests found in collection: ${collection}`);
    }
  }

  return allPaths;
}

const { guest, collection, episodes = [] } = Astro.props;
const { name, role, company, bio, social_links, image_url } = guest.data;

// Determine language from collection
const language = collection.replace('-guests', '');

// Get optimized guest image
const image = await getGuestImage(image_url ? `/images/guests/${image_url}` : '/images/default.png', 'detail');
---

<GuestLayout guest={guest} collection={collection} episodes={episodes}>
  <main class="container mx-auto px-4 py-8 max-w-4xl">
    <!-- Back navigation -->
    <nav class="mb-8">
      <a 
        href={`/${language}/guests`}
        class="inline-flex items-center text-accent hover:text-accent-dark transition-colors"
      >
        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
        Back to guests
      </a>
    </nav>

    <!-- Guest profile -->
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden">
      <div class="p-8">
        <div class="flex flex-col md:flex-row gap-8">
          <!-- Guest image -->
          <div class="flex-shrink-0">
            <img
              src={image.src}
              width={image.width}
              height={image.height}
              alt={`${name}'s profile picture`}
              class="rounded-full object-cover w-32 h-32 mx-auto md:mx-0"
              loading="eager"
              decoding="async"
            />
          </div>

          <!-- Guest info -->
          <div class="flex-grow text-center md:text-left">
            <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-2">{name}</h1>
            {role && (
              <p class="text-xl text-gray-600 dark:text-gray-400 mb-2">{role}</p>
            )}
            {company && (
              <p class="text-lg text-gray-600 dark:text-gray-400 mb-4">{company}</p>
            )}
            
            <!-- Social links -->
            {social_links && social_links.length > 0 && (
              <div class="flex gap-4 justify-center md:justify-start mb-6">
                {social_links.map(({ platform, url }: { platform: string; url: string }) => (
                  <a
                    href={url}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="text-gray-600 dark:text-gray-400 hover:text-accent dark:hover:text-accent transition-colors p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-700"
                    title={`Follow ${name} on ${platform}`}
                    aria-label={`Follow ${name} on ${platform} (opens in new tab)`}
                  >
                    {platform === 'twitter' && (
                      <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                        <path d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84"></path>
                      </svg>
                    )}
                    {platform === 'linkedin' && (
                      <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                        <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"></path>
                      </svg>
                    )}
                  </a>
                ))}
              </div>
            )}
          </div>
        </div>

        <!-- Bio -->
        {bio && (
          <div class="mt-8 pt-8 border-t border-gray-200 dark:border-gray-700">
            <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">About</h2>
            <p class="text-gray-700 dark:text-gray-300 leading-relaxed">{bio}</p>
          </div>
        )}

        <!-- Episodes -->
        {episodes && episodes.length > 0 && (
          <div class="mt-8 pt-8 border-t border-gray-200 dark:border-gray-700">
            <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">
              Episodes featuring {name}
            </h2>
            <div class="space-y-4">
              {episodes.map((episode) => (
                <div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-4">
                  <a 
                    href={`/${language}/episodes/${episode.slug}`}
                    class="block hover:text-accent transition-colors"
                  >
                    <h3 class="font-medium text-gray-900 dark:text-white mb-2">{episode.data.attributes.title}</h3>
                    {episode.data.attributes.description && (
                      <p class="text-sm text-gray-600 dark:text-gray-400 line-clamp-2">{episode.data.attributes.description}</p>
                    )}
                  </a>
                </div>
              ))}
            </div>
          </div>
        )}
      </div>
    </div>
  </main>
</GuestLayout>
