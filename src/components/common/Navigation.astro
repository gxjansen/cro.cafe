---
import { getCollection } from 'astro:content';
import LanguageSwitcher from './LanguageSwitcher.astro';

interface Props {
  currentLang: 'en' | 'de' | 'es' | 'nl';
  currentPath: string;
}

const { currentLang, currentPath } = Astro.props;

// Get platforms for the current language
const platforms = await getCollection('platforms', (entry) => entry.data.language === currentLang);

// Navigation items
const navItems = [
  { href: `/${currentLang}`, label: 'Home' },
  { href: `/${currentLang}/episodes`, label: 'Episodes' },
  { href: `/${currentLang}/guests`, label: 'Guests' },
  { href: `/${currentLang}/about`, label: 'About' },
];

// Determine if the current path matches a nav item
const isCurrentPage = (href: string) => {
  const pathWithoutLang = currentPath.replace(/^\/(en|de|es|nl)\//, '/');
  const hrefWithoutLang = href.replace(/^\/(en|de|es|nl)\//, '/');
  return pathWithoutLang === hrefWithoutLang;
};
---

<nav class="site-navigation">
  <div class="nav-container">
    <div class="nav-left">
      <a href={`/${currentLang}`} class="logo-link">
        <img 
          src="/crocafe-logo.svg" 
          alt="CRO.CAFE" 
          width="120" 
          height="40"
          class="logo"
        />
      </a>
    </div>

    <div class="nav-center">
      <ul class="nav-items">
        {navItems.map(({ href, label }) => (
          <li>
            <a
              href={href}
              class={`nav-link ${isCurrentPage(href) ? 'active' : ''}`}
              aria-current={isCurrentPage(href) ? 'page' : undefined}
            >
              {label}
            </a>
          </li>
        ))}
      </ul>
    </div>

    <div class="nav-right">
      <div class="platform-links">
        {platforms.map((platform) => (
          <a 
            href={platform.data.url}
            class="platform-link"
            target="_blank"
            rel="noopener noreferrer"
            title={platform.data.name}
          >
            <img 
              src={platform.data.icon_url} 
              alt={platform.data.name}
              width="24"
              height="24"
              class="platform-icon"
            />
          </a>
        ))}
      </div>
      <LanguageSwitcher 
        currentLang={currentLang}
        currentPath={currentPath}
      />
    </div>
  </div>
</nav>

<style>
.site-navigation {
  @apply sticky top-0 z-50 bg-white dark:bg-gray-900 shadow-md;
}

.nav-container {
  @apply max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 h-16
         flex items-center justify-between;
}

.nav-left {
  @apply flex items-center;
}

.logo-link {
  @apply block;
}

.logo {
  @apply h-8 w-auto;
}

.nav-center {
  @apply hidden md:block flex-1 px-8;
}

.nav-items {
  @apply flex justify-center space-x-8;
}

.nav-link {
  @apply text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white
         px-3 py-2 rounded-md text-sm font-medium transition-colors;
}

.nav-link.active {
  @apply text-blue-600 dark:text-blue-400;
}

.nav-right {
  @apply flex items-center space-x-4;
}

.platform-links {
  @apply hidden sm:flex items-center space-x-2;
}

.platform-link {
  @apply p-1 rounded-full hover:bg-gray-100 dark:hover:bg-gray-800
         transition-colors;
}

.platform-icon {
  @apply w-6 h-6;
}

/* Mobile menu button - to be implemented with client:visible */
.menu-button {
  @apply md:hidden p-2 rounded-md text-gray-600 dark:text-gray-300
         hover:text-gray-900 dark:hover:text-white
         hover:bg-gray-100 dark:hover:bg-gray-800
         focus:outline-none focus:ring-2 focus:ring-inset focus:ring-blue-500;
}
</style>
