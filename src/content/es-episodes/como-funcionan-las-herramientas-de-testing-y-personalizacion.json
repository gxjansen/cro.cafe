{
  "id": "como-funcionan-las-herramientas-de-testing-y-personalizacion",
  "title": "Cómo funcionan las herramientas de testing y personalización",
  "description": "Hablamos de manera clara y sencilla sobre como funcionan las herramientas de testing y personalización. Os quedará claro y meridiano como el agua cristalina.",
  "date": "2025-01-10T20:38:14.617Z",
  "duration": 0,
  "audio_url": "https://chrt.fm/track/D992D/media.transistor.fm/6523651c/2229bb06.mp3",
  "transcript_url": "<p>Este bonus surge por una serie de preguntas que me hacen alumnos de los masters y cursos donde imparto clases y que son recurrentes, acerca de como funcionan las herramientas de testing y personalización y cuales son las más adecuadas para cada proyecto o cliente.<br></p><p>De inicio debemos distinguir el testing de la personalización.<br></p><p>En el testing siempre existe un grupo de control. El grupo de control son un conjunto de usuarios que siempre van a ver la versión original de la URl, pantalla o proceso que esté siendo objeto del test.<br></p><p>Luego están las versiones alternativas de esa URL, pantalla o proceso o variaciones. A esas versiones llegan usuarios en la misma proporción que a la versión de control, y el objetivo es comprobar como los cambios presentados en las variaciones afectan a la métrica de control que hemos definido.<br></p><p>Por ejemplo, queremos testar una página de producto en la que modificamos la fotografía del producto. Y empleamos dos variaciones, cada una con una imagen de producto diferente. El KPI principal que medimos es el clic en add to cart.<br></p><p>Hecho de esta forma, en este test el 33,3% de los usuarios que accedan a esa URL del producto verán la versión original, otro 33,3% la versión alternativa 1 y otro 33,3% la versión alternativa dos.<br></p><p>En función del rendimiento de cada versión de cara al KPI principal que medimos y teniendo en cuenta todos los datos relativos al test valoraremos cual de dichas versiones ha funcionado mejor.</p><p>En la personalización no tenemos un grupo de control, ni versiones o variaciones de una URL, pantalla o proceso.<br></p><p>Lo que hacemos es indicar que a un conjunto de usuarios definido por una serie de variables se le enseñe esa URL, pantalla o proceso de una manera concreta, por pertenecer a ese grupo de usuarios, pero no se compara su rendimiento con otro grupo similar como si se haría en un test.<br></p><p>Teniendo esto claro pasaríamos a diferenciar las herramientas client-side de las server-side.<br></p><p>En client-side los cambios se ejecutan en el navegador via JS. Se sirve la misma URL, pero los cambios ocurren en el navegador del usuario. Mejor para cambios ligeros que no influyan en la funcionalidad o en nada que no sea estrictamente el layout definido. Baja carga de IT. Efecto flickering y su impacto en conversión.<br></p><p>En server-side, los cambios se producen a nivel de servidor. Llega una petición y se sirve el contenido que corresponde en función de cual sea la versión que corresponda a cada usuario. Mayor carga técnica. Mayor robustez, sobre todo sitios dinámicos con presencia de SPA.</p><p>Dentro de las client-side tenemos las que cargan su JS de forma síncrona y de forma asíncrona.</p><p>La carga síncrona implica que cada script se carga complemtamente antes de cargar el siguiente. La asíncrona permite la carga simultánea de scripts.</p><p>En general se prefiere la carga asíncrona.</p><p>¿Qué herramienta es mejor?</p><p><br></p><p><br></p><p><br></p>",
  "show_notes": "<ul><li>www.ricardotayar.com</li><li>www.flat101.es</li><li>https://www.linkedin.com/in/ricardotayar/</li><li>https://twitter.com/rtayar</li></ul>",
  "guests": [],
  "youtube_url": "",
  "main_image": "como-funcionan-las-herramientas-de-testing-y-personalizacion.jpg",
  "language": "es",
  "type": "podcast"
}