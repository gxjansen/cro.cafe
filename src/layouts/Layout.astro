---
import '~/assets/styles/base.css';

import CustomStyles from '~/components/CustomStyles.astro';
import Favicons from '~/components/Favicons.astro';
import SkipLinks from '~/components/common/SkipLinks.astro';
import { validateProps, LayoutPropsSchema } from '~/utils/component-validation';

interface Props {
  metadata: {
    title: string;
    description: string;
    image?: string;
    canonicalUrl?: string;
    type?: 'website' | 'article';
    publishedTime?: string;
    modifiedTime?: string;
    author?: string;
    tags?: string[];
    alternateLanguages?: Record<string, string>;
  };
  currentLang: 'en' | 'nl' | 'de' | 'es';
  availableLanguages: readonly ('en' | 'nl' | 'de' | 'es')[];
}

const props = validateProps(LayoutPropsSchema, Astro.props);
const { metadata, currentLang, availableLanguages } = props;

const {
  title,
  description,
  image = '/images/default.png',
  canonicalUrl = Astro.url.href,
  type = 'website',
  publishedTime,
  modifiedTime,
  author,
  tags = [],
  alternateLanguages = {},
} = metadata;
---

<!DOCTYPE html>
<html lang={currentLang} dir="ltr">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <!-- Favicons -->
    <Favicons />

    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalUrl} />

    <!-- Language alternates -->
    {availableLanguages.map((lang) => (
      <link
        rel="alternate"
        hreflang={lang}
        href={alternateLanguages[lang] || `${Astro.url.origin}/${lang === 'en' ? '' : lang}`}
      />
    ))}
    <link rel="alternate" hreflang="x-default" href={Astro.url.origin} />

    <!-- Open Graph -->
    <meta property="og:type" content={type} />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.url)} />
    <meta property="og:locale" content={currentLang} />
    {availableLanguages
      .filter((lang) => lang !== currentLang)
      .map((lang) => (
        <meta property="og:locale:alternate" content={lang} />
      ))}

    <!-- Article specific -->
    {publishedTime && <meta property="article:published_time" content={publishedTime} />}
    {modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}
    {author && <meta property="article:author" content={author} />}
    {tags.map((tag) => (
      <meta property="article:tag" content={tag} />
    ))}

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalUrl} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, Astro.url)} />

    <!-- Custom Styles -->
    <CustomStyles />
  </head>

  <body>
    <SkipLinks />

    <header role="banner" class="site-header">
      <!-- Header content will go here -->
    </header>

    <main id="main-content" role="main" class="site-main">
      <slot />
    </main>

    <footer role="contentinfo" class="site-footer">
      <!-- Footer content will go here -->
    </footer>
  </body>
</html>

<style>
.site-header {
  @apply w-full bg-white dark:bg-gray-900 shadow-sm;
}

.site-main {
  @apply min-h-screen;
}

.site-footer {
  @apply w-full bg-gray-50 dark:bg-gray-900 border-t border-gray-200 dark:border-gray-800;
}
</style>
